<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.start.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.start.model.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="password" jdbcType="VARCHAR" property="password"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,user_name,nick_name,password
    </sql>
    <select id="findByPK" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="find" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            1=1
            <if test="id != null">
                and id=#{id,jdbcType=BIGINT}
            </if>
            <if test="userName != null">
                and user_name=#{userName,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null">
                and nick_name=#{nickName,jdbcType=VARCHAR}
            </if>
            <if test="password != null">
                and password=#{password,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <delete id="deleteByPK" parameterType="java.lang.Long">
        DELETE FROM t_user WHERE id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="batchDelete" parameterType="java.util.List">
        delete FROM t_user where id in
        <foreach close=")" collection="ids" item="id" open="(" separator=",">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.example.start.model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user (id,user_name ,nick_name, password)
        VALUES (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR},
        #{nickName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.start.model.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{user_name,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nick_name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPkSelective" parameterType="com.example.start.model.User">
        update t_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPK" parameterType="com.example.start.model.User">
        UPDATE b_activity
        SET user_name = #{userName,jdbcType=VARCHAR},
        nick_name = #{nickName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

</mapper>